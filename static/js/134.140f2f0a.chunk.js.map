{"version":3,"file":"static/js/134.140f2f0a.chunk.js","mappings":"mPAQMA,EAAc,CAClBC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,QAmGT,UAhGe,WACb,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,SAC9BC,GAAWC,EAAAA,EAAAA,MAEjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAKX,EAAL,CAEA,IAAMY,EAAc,mCAAG,oGAEnBJ,GAAa,GAFM,UAIAK,EAAAA,EAAAA,IAAiBb,GAJjB,OAIbc,EAJa,OAKnBR,EAASQ,GACTC,EAAAA,GAAAA,QAAA,iCAC4Bf,EAD5B,gCAEEb,GARiB,gDAWnBuB,EAAS,KAAMM,SACfD,EAAAA,GAAAA,MAAY,KAAMC,QAAS7B,GAZR,yBAcnBqB,GAAa,GAdM,4EAAH,qDAkBpBI,GApBuB,CAqBxB,GAAE,CAACZ,IAWJ,OACE,4BACE,wBAAI,iBACJ,kBAAMiB,SAZW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAcF,EAAMG,OAAOC,SAASC,OAAOC,MAEjDzB,EAAgB,CACd0B,MAAOL,GAEV,EAKG,WACE,kBACEM,KAAK,OACLC,KAAK,SACLC,YAAY,mBACZC,UAAQ,KAEV,mBAAQH,KAAK,SAAb,SAAsB,cAGb,OAAVjB,IACC,eAAGqB,UAAU,UAAb,UAAuB,6DACsCrB,KAG9DF,IACC,SAAC,KAAD,CACEwB,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,eAAe,UACfC,OAAO,OACPC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,IAIZlC,EAAMmC,OAAS,IACd,wBACGnC,EAAMoC,KAAI,SAAAC,GACT,OACE,SAAC,KAAD,CACEC,MAAO,CAAEC,KAAM1C,GACf4B,UAAU,OAEVe,GAAE,kBAAaH,EAAKI,IAJtB,UAME,yBACE,wBAAKJ,EAAKK,oBAJPL,EAAKI,GAQf,QAKV,C,+LChHKE,EAAU,mCACHC,EAAsB,mCAAG,oGACfC,EAAAA,EAAAA,IAAA,mEAC2CF,IAF5B,cAC5BG,EAD4B,yBAI3BA,EAAKA,KAAKC,SAJiB,2CAAH,qDAMtBC,EAAiB,mCAAG,WAAMP,GAAN,uFACZI,EAAAA,EAAAA,IAAA,6CACqBJ,EADrB,oBACmCE,IAFvB,cACzBG,EADyB,yBAIxBA,EAAKA,MAJmB,2CAAH,sDAMjBG,EAAe,mCAAG,WAAMR,GAAN,uFACVI,EAAAA,EAAAA,IAAA,6CACqBJ,EADrB,4BAC2CE,IAFjC,cACvBG,EADuB,yBAItBA,EAAKA,KAAKI,MAJY,2CAAH,sDAMfC,EAAiB,mCAAG,WAAMV,GAAN,uFACZI,EAAAA,EAAAA,IAAA,6CACqBJ,EADrB,4BAC2CE,IAF/B,cACzBG,EADyB,yBAIxBA,EAAKA,KAAKC,SAJc,2CAAH,sDAMjBvC,EAAgB,mCAAG,WAAM4C,GAAN,uFACXP,EAAAA,EAAAA,IAAA,4DACoCF,EADpC,kBACqDS,IAF1C,cACxBN,EADwB,yBAIvBA,EAAKA,KAAKC,SAJa,2CAAH,qD","sources":["pages/Movies.jsx","services/api.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MutatingDots } from 'react-loader-spinner';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { fetchFilmsByName } from 'services/api';\n\n\n\nconst toastConfig = {\n  position: 'top-center',\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'dark',\n};\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchTerm = searchParams.get('query');\n  const location = useLocation();\n\n  const [films, setFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!searchTerm) return;\n\n    const fetchPostsData = async () => {\n      try {\n        setIsLoading(true);\n\n        const post = await fetchFilmsByName(searchTerm);\n        setFilms(post);\n        toast.success(\n          `Your films with name: \"${searchTerm}\" were successfully fetched!`,\n          toastConfig\n        );\n      } catch (error) {\n        setError(error.message);\n        toast.error(error.message, toastConfig);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchPostsData();\n  }, [searchTerm]);\n\n  const handleSumbit = event => {\n    event.preventDefault();\n    const searchValue = event.target.children.search.value;\n\n    setSearchParams({\n      query: searchValue,\n    });\n  };\n\n  return (\n    <div>\n      <h1>Search Page</h1>\n      <form onSubmit={handleSumbit}>\n        <input\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"Enter post id...\"\n          required\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {error !== null && (\n        <p className=\"c-error\">\n          Oops, some error occured. Please, try again later. Error: {error}\n        </p>\n      )}\n      {isLoading && (\n        <MutatingDots\n          height=\"100\"\n          width=\"100\"\n          color=\"#5800a5\"\n          secondaryColor=\"#e08e00\"\n          radius=\"12.5\"\n          ariaLabel=\"mutating-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n      )}\n\n      {films.length > 0 && (\n        <ul>\n          {films.map(film => {\n            return (\n              <Link\n                state={{ from: location }}\n                className=\"film\"\n                key={film.id}\n                to={`/movies/${film.id}`}\n              >\n                <li>\n                  <h2>{film.original_title}</h2>\n                </li>\n              </Link>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from \"axios\"\nconst API_key = 'f04280a59593beb5e2ef3728c1336c0e';\nexport const fetchFilmsWeeklyTrends = async () => {\n    const data = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_key}`\n    );\n    return data.data.results;\n}\nexport const fetchFilmsDetails = async(id) => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_key}`\n  );\n  return data.data;\n}\nexport const fetchFilmsCasts = async id => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_key}`\n  );\n  return data.data.cast;\n};\nexport const fetchFilmsReviews = async id => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_key}`\n  );\n  return data.data.results;\n};\nexport const fetchFilmsByName = async querry => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_key}&query=${querry}`\n  );\n  return data.data.results;\n};"],"names":["toastConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","useSearchParams","searchParams","setSearchParams","searchTerm","get","location","useLocation","useState","films","setFilms","isLoading","setIsLoading","error","setError","useEffect","fetchPostsData","fetchFilmsByName","post","toast","message","onSubmit","event","preventDefault","searchValue","target","children","search","value","query","type","name","placeholder","required","className","height","width","color","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","visible","length","map","film","state","from","to","id","original_title","API_key","fetchFilmsWeeklyTrends","axios","data","results","fetchFilmsDetails","fetchFilmsCasts","cast","fetchFilmsReviews","querry"],"sourceRoot":""}