{"version":3,"file":"static/js/884.6cb8566c.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import React, { Suspense, lazy, useEffect, useRef, useState } from 'react'\nimport { MutatingDots } from 'react-loader-spinner';\nimport { Link, NavLink,  Route,  Routes, useLocation, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { fetchFilmsDetails } from 'services/api';\nconst CastsPage = lazy(() => import('./CastsPage'));\nconst ReviewsPage = lazy(() => import('./ReviewsPage'));\n\nconst toastConfig = {\n  position: 'top-center',\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'dark',\n};\nconst MovieDetails = () => {\n    const [filmDetails, setFilmDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { postId } = useParams();\n    const location = useLocation();\n    const [genres, setGenres] = useState('')\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!postId) return;\n\n    const fetchPostData = async () => {\n      try {\n        setIsLoading(true);\n\n        const postData = await fetchFilmsDetails(postId);\n        setFilmDetails(postData);\n          toast.success('Films details were successfully fetched!', toastConfig);\n          for (const genreN of postData.genres) {\n            setGenres(prevGenres=>prevGenres + `${genreN.name} `);\n          }\n      } catch (error) {\n        setError(error.message);\n        toast.error(error.message, toastConfig);\n      } finally {\n        setIsLoading(false);\n        }\n    };\n\n    fetchPostData();\n  }, [postId]);\n  return (\n    <div>\n      <Link to={backLinkHref.current}>Go back</Link>\n      {error !== null && (\n        <p className=\"c-error\">\n          Oops, some error occured. Please, try again later. Error: {error}\n        </p>\n      )}\n      {isLoading && (\n        <MutatingDots\n          height=\"100\"\n          width=\"100\"\n          color=\"#5800a5\"\n          secondaryColor=\"#e08e00\"\n          radius=\"12.5\"\n          ariaLabel=\"mutating-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n      )}\n      {filmDetails !== null && (\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${filmDetails.poster_path}`}\n            alt=\"\"\n          />\n          <div>\n            <h2>{filmDetails.original_title}</h2>\n            <ul>\n              <li>\n                <p>Vote / Votes</p>\n                <p>\n                  <span>{filmDetails.vote_average.toFixed(1)}</span>\n                  <span>/</span>\n                  <span>{filmDetails.vote_count}</span>\n                </p>\n              </li>\n              <li>\n                <p>Popularity</p>\n                <p>{filmDetails.popularity.toFixed(1)}</p>\n              </li>\n              <li>\n                <p>Genre</p>\n                <p>{genres}</p>\n              </li>\n            </ul>\n            <h3>About</h3>\n            <p>{filmDetails.overview}</p>\n          </div>\n          <NavLink to=\"casts\">Casts</NavLink>\n          <NavLink to=\"reviews\">Reviews</NavLink>\n        </div>\n      )}\n      <Suspense\n        fallback={\n          <MutatingDots\n            height=\"100\"\n            width=\"100\"\n            color=\"#5800a5\"\n            secondaryColor=\"#e08e00\"\n            radius=\"12.5\"\n            ariaLabel=\"mutating-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n          />\n        }\n      >\n        <Routes>\n          <Route path=\"casts\" element={<CastsPage />} />\n          <Route path=\"reviews\" element={<ReviewsPage />} />\n        </Routes>{' '}\n      </Suspense>\n    </div>\n  );\n}\nexport default MovieDetails\n","import axios from \"axios\"\nconst API_key = 'f04280a59593beb5e2ef3728c1336c0e';\nexport const fetchFilmsWeeklyTrends = async () => {\n    const data = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_key}`\n    );\n    return data.data.results;\n}\nexport const fetchFilmsDetails = async(id) => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_key}`\n  );\n  return data.data;\n}\nexport const fetchFilmsCasts = async id => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_key}`\n  );\n  return data.data.cast;\n};\nexport const fetchFilmsReviews = async id => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_key}`\n  );\n  return data.data.results;\n};\nexport const fetchFilmsByName = async querry => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_key}&query=${querry}`\n  );\n  return data.data.results;\n};"],"names":["CastsPage","lazy","ReviewsPage","toastConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","useState","filmDetails","setFilmDetails","isLoading","setIsLoading","error","setError","postId","useParams","location","useLocation","genres","setGenres","backLinkHref","useRef","state","from","useEffect","fetchPostData","fetchFilmsDetails","postData","toast","genreN","prevGenres","name","message","to","current","className","height","width","color","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","visible","src","poster_path","alt","original_title","vote_average","toFixed","vote_count","popularity","overview","Suspense","fallback","path","element","API_key","fetchFilmsWeeklyTrends","axios","data","results","id","fetchFilmsCasts","cast","fetchFilmsReviews","fetchFilmsByName","querry"],"sourceRoot":""}