{"version":3,"file":"static/js/411.a4e8e022.chunk.js","mappings":"2OAKMA,EAAc,CAClBC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,QAqET,UAnEkB,WAChB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAWC,EAAAA,EAAAA,MAAXD,OAuBR,OArBAE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAa,mCAAG,oGAElBN,GAAa,GAFK,UAIEO,EAAAA,EAAAA,IAAgBJ,GAJlB,OAIZN,EAJY,OAKlBC,EAASD,GACTW,EAAAA,GAAAA,QAAc,2CAA4CtB,GANxC,gDAQlBgB,EAAS,KAAMO,SACfD,EAAAA,GAAAA,MAAY,KAAMC,QAASvB,GATT,yBAWlBc,GAAa,GAXK,4EAAH,qDAenBM,GAjBmB,CAkBpB,GAAE,CAACH,KAGF,4BACE,wBAAI,cACO,OAAVF,IACC,eAAGS,UAAU,UAAb,UAAuB,6DACsCT,KAG9DF,IACC,SAAC,KAAD,CACEY,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,eAAe,UACfC,OAAO,OACPC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,IAGZtB,EAAMuB,OAAS,GACd,wBACGvB,EAAMwB,KAAI,SAAAC,GACT,OACE,2BACE,gBACEC,IAAG,yCAAoCD,EAAKE,cAC5CC,IAAKH,EAAKI,iBAEZ,wBAAKJ,EAAKI,iBACV,0BAAI,cAAYJ,EAAKK,eANdL,EAAKM,GASjB,OAEF,uBAAG,8CAGX,C","sources":["pages/CastsPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { MutatingDots } from 'react-loader-spinner';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { fetchFilmsCasts } from 'services/api';\nconst toastConfig = {\n  position: 'top-center',\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'dark',\n};\nconst CastsPage = () => {\n  const [casts, setCasts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { postId } = useParams();\n\n  useEffect(() => {\n    if (!postId) return;\n\n    const fetchPostData = async () => {\n      try {\n        setIsLoading(true);\n\n        const casts = await fetchFilmsCasts(postId);\n        setCasts(casts);\n        toast.success('casts details were successfully fetched!', toastConfig);\n      } catch (error) {\n        setError(error.message);\n        toast.error(error.message, toastConfig);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchPostData();\n  }, [postId]);\n\n  return (\n    <div>\n      <h1>CastsPage</h1>\n      {error !== null && (\n        <p className=\"c-error\">\n          Oops, some error occured. Please, try again later. Error: {error}\n        </p>\n      )}\n      {isLoading && (\n        <MutatingDots\n          height=\"100\"\n          width=\"100\"\n          color=\"#5800a5\"\n          secondaryColor=\"#e08e00\"\n          radius=\"12.5\"\n          ariaLabel=\"mutating-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n      )}\n      {casts.length > 0 ? (\n        <ul>\n          {casts.map(cast => {\n            return (\n              <li key={cast.id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${cast.profile_path}`}\n                  alt={cast.original_name}\n                />\n                <h2>{cast.original_name}</h2>\n                <h2>Character: {cast.character}</h2>\n              </li>\n            );\n          })}\n        </ul>\n      ):(<p>We don't have any casts for this movies</p>)}\n    </div>\n  );\n}\nexport default CastsPage\n"],"names":["toastConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","useState","casts","setCasts","isLoading","setIsLoading","error","setError","postId","useParams","useEffect","fetchPostData","fetchFilmsCasts","toast","message","className","height","width","color","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","visible","length","map","cast","src","profile_path","alt","original_name","character","id"],"sourceRoot":""}